name: Databricks-compatibility
on: [push]

jobs:
  Databricks-compatibility-library:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          cp -n databricks/requirements-databricks-15.4-LTS.txt .
          cat databricks/setup.cfg > setup.cfg
          cat databricks/pyproject.toml > pyproject.toml
          sed -i 's/name="syngen"/name="syngen-databricks"/' src/setup.py
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements-databricks-15.4-LTS.txt ]; then pip install -r requirements-databricks-15.4-LTS.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
            export PYTHONPATH=$PYTHONPATH:${{ github.workspace }}/src
            pytest src/tests

      - name: Build test Docker image
        run: |
            cp -n databricks/databricks.dockerfile .
            docker build -t databricks-test-image -f databricks.dockerfile .

      - name: Build Package
        run: |
          pip install build
          python -m build .
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }} # For test release: use secrets.PYPI_TEST_TOKEN and add 'repository_url: https://test.pypi.org/legacy/'
          verbose: true
